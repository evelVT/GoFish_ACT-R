;;; Model of Rock Paper Scissors
;;;

(add-dm
    
    (goal isa goal state start)
)

(set-all-baselevels -100 10) ;; time offset and number of references

;; At the start of the model, retrieve any decision
(p game-start
   =goal>
     isa goal
     state start
==>
   =goal>
     state checkTurn
)


(p checkTurn-DiffP
   =goal>
     isa goal
     state checkTurn
   =action>
    isa Turn
    player  = player1
==>
   =goal>
     state remember-asking
    -action>
)

(p remember-player-asking-diff
   =goal>
     isa goal
     state remember-asking
   =action>
    isa ask
    playerAsking  = player1
    rank  = askedR   
    playerAsked = player2
==>
   =goal>
     state remember-asked
   +imaginal>
     isa playerHas
     player =player1
     rank  = askedR 
   -imaginal>
)


(p remember-player-asked
   =goal>
     isa goal
     state remember-asked
   =action>
    isa ask
    player  = player2
    rank  = askedR   
==>
   =goal>
     state checkTurn
   +imaginal>
     isa playerHasNo
     player = player2
     rank  = askedR 
  -action>
  -imaginal>
)


(p remember-player-asking-model
   =goal>
     isa goal
     state remember-asking
   =action>
    isa ask
    playerAsking  = player1
    rank  = askedR   
    playerAsked = model ; I think we could remove this. Don't see the relevance
==>
   +goal>
     state check-rank
     rank = askedR
   +imaginal>
     isa playerHas
     player =player1
     rank  = askedR 
  +=action>
     isa inHand
     rank = askedR
   -imaginal>

)

(p model-is-asked-has
   =goal>
     isa goal
     state check-rank
     rank = askedR
   =action>
    isa inHand
    rank  =   askedR
    isThere  = yes
==>
   =goal>
     state checkTurn
   +action>
      isa response
      rank = askedR
      give = Yes
)

(p model-is-asked-has-no
   =goal>
     isa goal
     state check-rank
     rank = askedR
   =action>
    isa inHand
    rank  =   askedR
    isThere  = no
==>
   =goal>
     state checkTurn
   +action>
      isa response
      rank = askedR
      give = Go-fish
)

(p checkTurn-M
   =goal>
     isa goal
     state checkTurn
   =action>
    isa Turn
    player  = model
==>
   =goal>
      state check-hand
    +action>
      isa inHand
      isThere = yes
)

(p checkHand
   =goal>
     isa goal
     state check-hand
   =action>
    isa inHand
    rank = seenR
    isThere  = yes
==>
   +goal>
      state check-if-asked
      rank = seenR
    +retrieval>
      isa playerHas
      rank  = seenR
)

(p rank-no-one-has
   =goal>
     isa goal
     state check-if-asked
     rank = seenR
   =retrieval>
     isa playerHas
     rank  = seenR
     player =nil
==>
   =goal>
      state checkHand
    +action>
      isa inHand
      isThere = yes
)

(p rank-one-has
   =goal>
     isa goal
     state check-if-asked
     rank = seenR
   =retrieval>
     isa playerHas
     rank  = seenR
     player = player1
==>
   +goal>
      state request-player
      rank =seenR
      player  =player1
)

(p rank-one-has
   =goal>
     isa goal
     state request-player
     rank =seenR
     player  =player1
==>
   +goal>
      state check-nr-cards
      rank =seenR
   +action>
     isa request
     rank 
)


(goal-focus goal)

